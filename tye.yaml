# tye application configuration file
# read all about it at https://github.com/dotnet/tye
#
# when you've given us a try, we'd love to know what you think:
#    https://aka.ms/AA7q20u
#
# define global settings here
# name: exampleapp # application name
# registry: exampleuser # dockerhub username or container registry hostname
name: steeltoe.incubator.spring.petclinic

extensions:
  - name: zipkin

services:
  - name: config-server
    image: springcommunity/spring-petclinic-config-server:2.3.6
    bindings:
      - port: 8888
        containerPort: 8888
        protocol: http

  - name: discovery-server
    image: springcommunity/spring-petclinic-discovery-server:2.3.6
    bindings:
      - port: 8761
        containerPort: 8761
        protocol: http
    env:
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_PROFILES_ACTIVE=docker

  - name: admin-server
    image: springcommunity/spring-petclinic-admin-server:2.3.6
    bindings:
      - port: 9090
        containerPort: 9090
        protocol: http
    env:
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_PROFILES_ACTIVE=docker

  - name: grafana-server
    dockerFile: docker/grafana/Dockerfile
    bindings:
      - port: 3000
        containerPort: 3000
        protocol: http

  - name: prometheus-server
    dockerFile: docker/prometheus/Dockerfile
    bindings:
      - port: 9091
        containerPort: 9090
        protocol: http

  - name: api-gateway
    image: springcommunity/spring-petclinic-api-gateway:2.3.6
    bindings:
      - port: 8080
        containerPort: 8080
        protocol: http
    env:
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_PROFILES_ACTIVE=docker

  # EF Core Code-First doesn't work well with a shared database
  # - name: mysql-server
  #   image:  mysql
  #   bindings:
  #     - port: 3306
  #       containerPort: 3306
  #   env:
  #     - MYSQL_DATABASE=petclinic
  #     - MYSQL_ROOT_PASSWORD=petclinic

  # Tye can currently only run Spring apps in Docker.
  # We need to ensure that our .NET apps run in Docker (with config relevant to Docker) too so they can be reached easily
  # Use a custom "ENVIRONMENT" until Tye doesn't overwrite ASPNETCORE_ENVIRONMENT
  - name: customers-service
    project: steeltoe-petclinic-customers-service/Customers.Api/Steeltoe.Petclinic.Customers.Api.csproj
    bindings:
      - protocol: http
    env:
      - ENVIRONMENT=docker
  #    - UseMySql=true

  - name: visits-service
    project: steeltoe-petclinic-visits-service/Visits.Api/Steeltoe.Petclinic.Visits.Api.csproj
    bindings:
      - protocol: http
    env:
      - ENVIRONMENT=docker
  #    - UseMySql=true

  - name: vets-service
    project: steeltoe-petclinic-vets-service/Vets.Api/Steeltoe.Petclinic.Vets.Api.csproj
    bindings:
      - protocol: http
    env:
      - ENVIRONMENT=docker
  #    - UseMySql=true
